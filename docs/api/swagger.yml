swagger: "2.0"
info:
  description: This is a dashboard api server.
  version: 0.0.1
  title: Dashboard API
  contact:
    email: pengisgood@gmail.com
basePath: /api/v1
tags:
- name: demo
  description: Sanity check
- name: docker
  description: Operations about docker
  externalDocs:
    description: Find out more about docker operations
    url: https://docs.docker.com/engine/api/v1.37
- name: user
  description: Operations about user
- name: fabric
  description: Operations about user
schemes:
- http
- https
paths:
  /:
    get:
      tags:
      - demo
      summary: Welcome
      produces:
      - text/plain
      responses:
        200:
          description: OK
          schema:
            type: string
            example: welcome to ledger dashboard!
  /demo:
    get:
      tags:
      - demo
      summary: Hello world
      security:
      - ApiKeyAuth: []
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/HelloWorld"
        401:
          description: Unauthorized
          schema:
            $ref: "#/definitions/Error"
  /login:
    post:
      tags:
      - user
      summary: User login
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: user
        description: User object for login
        required: true
        schema:
          $ref: "#/definitions/User"
      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/LoginResponse"
        401:
          description: Unauthorized
          schema:
            $ref: "#/definitions/Error"
securityDefinitions:
  ApiKeyAuth:
    type: apiKey
    in: header
    name: Authorization

# TODO: extract the model definition into separate files
definitions:
  HelloWorld:
    type: object
    properties:
      code:
        type: integer
        example: 200
      status:
        type: string
        example: success
      msg:
        type: string
        example: hello world
  Error:
    type: object
    properties:
      errors:
        type: array
        items:
          type: object
          properties:
            message:
              type: string
              example: Token Expired
  User:
    type: object
    properties:
      name:
        type: string
        example: admin
      password:
        type: string
        example: pasw0rd
  LoginResponse:
    type: object
    properties:
      id:
        type: string
        example: 5bbeea345d46ac0ba215518b
      name:
        type: string
        example: admin
      token:
        type: string
        example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjViYmVlYTM0NWQ0NmFjMGJhMjE1NTE4YiIsImlhdCI6MTUzOTMxMzEyOCwiZXhwIjoxNTM5MzQ5MTI4fQ.Q5YuMsK7ABbQS4ZlmvQHmpenDu9_zCFAI-SLA7sYkiQ

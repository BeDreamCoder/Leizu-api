swagger: "2.0"
info:
  description: This is a dashboard api server.
  version: 0.0.1
  title: Dashboard API
  contact:
    email: pengisgood@gmail.com
basePath: /api/v1
tags:
- name: demo
  description: Sanity check
- name: docker
  description: Operations about docker
  externalDocs:
    description: Find out more about docker operations
    url: https://docs.docker.com/engine/api/v1.37
- name: user
  description: Operations about user
- name: peer
  description: Operations about peer
- name: organization
  description: Operations about orgranization
- name: chaincode
  description: Operations about chaincode
- name: channel
  description: Operations about channel
- name: consortium
  description: Operations about consortium
- name: TODO
  description: API work in progress
schemes:
- http
- https
paths:
  /:
    get:
      tags:
      - demo
      summary: Welcome
      produces:
      - text/plain
      responses:
        200:
          description: OK
          schema:
            type: string
            example: welcome to ledger dashboard!
  /demo:
    get:
      tags:
      - demo
      summary: Hello world
      security:
      - ApiKeyAuth: []
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        200:
          description: OK
          schema:
            $ref: "demo.yml#/HelloWorld"
        401:
          description: Unauthorized
          schema:
            $ref: "demo.yml#/Error"
  /user/login:
    post:
      tags:
      - user
      summary: User login
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: user
        description: User object for login
        required: true
        schema:
          $ref: "user.yml#/User"
      responses:
        200:
          description: OK
          schema:
            $ref: "user.yml#/LoginResponse"
        401:
          description: Unauthorized
          schema:
            $ref: "user.yml#/LoginError"
        400:
          description: Login failed
          schema:
            $ref: "user.yml#/400Error"
  /user/logout:
    post:
      tags:
      - user
      summary: User logout
      security:
      - ApiKeyAuth: []
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        200:
          description: OK
          schema:
            $ref: user.yml#/LogoutResponse
        401:
          description: Unauthorized
          schema:
            $ref: user.yml#/Error
  /user/password/reset:
    post:
      tags:
        - user
      summary: Reset user password
      security:
      - ApiKeyAuth: []
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: user
        description: User object for reset password
        required: true
        schema:
          $ref: user.yml#/ResetPasswordRequest
      responses:
        200:
          description: OK
          schema:
            $ref: user.yml#/ResetPasswordResponse
        401:
          description: Unauthorized
          schema:
            $ref: "user.yml#/Error"
  /user/check:
    post:
      tags:
        - user
      summary: Check user has been logged in
      consumes:
        - application/json
      produces:
        - application/json
      responses:
        200:
          description: OK
          schema:
            $ref: "user.yml#/CheckResponse"
        401:
          description: Unauthorized
          schema:
            $ref: "user.yml#/Error"
  /peer:
    get:
      tags:
      - peer
      summary: List all peers
      security:
      - ApiKeyAuth: []
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: query
        name: organizationId
        description: Organization id of peer
        required: false
        type: string
      responses:
        200:
          description: OK
          schema:
            type: object
            properties:
              code:
                type: integer
                example: 200
              status:
                type: string
              data:
                type: array
                items:
                  type: object
                  $ref: peer.yml#/Peer
              msg:
                type: string
        400:
          description: Bad request
          schema:
            $ref: common.yml#/400Error
        401:
          description: Unauthorized
          schema:
            $ref: common.yml#/401Error
    post:
      tags:
      - peer
      - TODO
      summary: Create peer
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        200:
          description: OK
  /peer/check:
    post:
      tags:
      - peer
      summary: Check node connectivity
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        200:
          description: OK
          schema:
            $ref: "peer.yml#/CheckResponse"
        401:
          description: Unauthorized
          schema:
            $ref: "peer.yml#/401Error"
  /peer/{peerId}:
    get:
      tags:
      - peer
      - TODO
      summary: Show peer details
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - name: peerId
        in: path
        description: Peer id
        required: true
        type: string
      responses:
        200:
          description: OK
  /organization:
    get:
      tags:
      - organization
      summary: List all organizations
      security:
      - ApiKeyAuth: []
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - name: channelId
        in: query
        description: Channel id
        required: false
        type: string
      responses:
        200:
          description: OK
          schema:
            $ref: "organization.yml#/OrganizationResponse"
        400:
          description: Bad request
          schema:
            $ref: common.yml#/400Error
        401:
          description: Unauthorized
          schema:
            $ref: common.yml#/401Error
    post:
      tags:
      - organization
      - TODO
      summary: Create organization
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        200:
          description: OK
  /organization/{organizationId}:
    get:
      tags:
      - organization
      - TODO
      summary: Show organization details
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - name: organizationId
        in: path
        description: Organization id
        required: true
        type: string
      responses:
        200:
          description: OK
  /channel:
    get:
      tags:
      - channel
      summary: List all channels
      security:
      - ApiKeyAuth: []
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        200:
          description: OK
          schema:
            $ref: "channel.yml#/ChannelListResponse"
        401:
          description: Unauthorized
          schema:
            $ref: "channel.yml#/Error"
    post:
      tags:
      - channel
      summary: Create channel
      security:
      - ApiKeyAuth: []
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: channel
        description: Create new channel that obtain organization
        required: true
        schema:
          $ref: "channel.yml#/Create"
      responses:
        200:
          description: OK
          schema:
            $ref: "channel.yml#/ChannelCreateResponse"
        401:
          description: Unauthorized
          schema:
            $ref: "channel.yml#/Error"
  /channel/{channelId}:
    get:
      tags:
      - channel
      summary: Show channel details
      security:
      - ApiKeyAuth: []
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - name: channelId
        in: path
        description: Channel id
        required: true
        type: string
      responses:
        200:
          description: OK
          schema:
            $ref: "channel.yml#/ChannelResponse"
        401:
          description: Unauthorized
          schema:
            $ref: "channel.yml#/Error"
  /channel/join:
    post:
      tags:
      - channel
      summary: Join channel
      security:
      - ApiKeyAuth: []
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: channel
        description: Join specify the organization's peers into channel, if peers is undefined, default join all the organization's peers
        required: true
        schema:
          $ref: "channel.yml#/Join"
      responses:
        200:
          description: OK
          schema:
            $ref: "channel.yml#/ChannelJoinResponse"
        401:
          description: Unauthorized
          schema:
            $ref: "channel.yml#/Error"
  /channel/update/{channelId}:
    put:
      tags:
      - channel
      summary: Update channel config
      security:
      - ApiKeyAuth: []
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - name: channelId
        in: path
        description: Channel id
        required: true
        type: string
      - in: body
        name: updateConfig
        description: Channel config elevant information for update
        required: true
        schema:
          $ref: "channel.yml#/Update"
      responses:
        200:
          description: OK
          schema:
            $ref: "channel.yml#/ChannelUpdateResponse"
        401:
          description: Unauthorized
          schema:
            $ref: "channel.yml#/Error"
  /chaincode:
    get:
      tags:
      - chaincode
      - TODO
      summary: List all chaincodes
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        200:
          description: OK
  /chaincode/{chaincodeId}:
    get:
      tags:
      - chaincode
      - TODO
      summary: Show chaincode details
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - name: chaincodeId
        in: path
        description: Chaincode id
        required: true
        type: string
      responses:
        200:
          description: OK
  /chaincode/install:
    post:
      tags:
      - chaincode
      - TODO
      summary: Install chaincode
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        200:
          description: OK
  /chaincode/instantiate:
    post:
      tags:
      - chaincode
      - TODO
      summary: Instantiate chaincode
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        200:
          description: OK
  /chaincode/upgrade:
    post:
      tags:
      - chaincode
      - TODO
      summary: Upgrade chaincode
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        200:
          description: OK
  /chaincode/invoke:
    post:
      tags:
      - chaincode
      - TODO
      summary: Invoke chaincode
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        200:
          description: OK
  /chaincode/query:
    get:
      tags:
      - chaincode
      - TODO
      summary: Query chaincode
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        200:
          description: OK
  /consortium:
    get:
      tags:
        - consortium
      summary: List all consortiums
      consumes:
        - application/json
      produces:
        - application/json
      security:
        - ApiKeyAuth: []
      responses:
        200:
          description: OK
          schema:
            $ref: "consortium.yml#/ConsortiumListResponse"
        401:
          description: Unauthorized
          schema:
            $ref: "consortium.yml#/401Error"
    post:
      tags:
      - consortium
      - TODO
      summary: Create consortium
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        200:
          description: OK
  /consortium/{consortiumId}:
    get:
      tags:
        - consortium
      summary: Show consortium details
      consumes:
        - application/json
      produces:
        - application/json
      security:
        - ApiKeyAuth: []
      parameters:
        - name: consortiumId
          in: path
          description: consortium id
          required: true
          type: string
      responses:
        200:
          description: OK
          schema:
            $ref: "consortium.yml#/ConsortiumResponse"
        401:
          description: Unauthorized
          schema:
            $ref: "consortium.yml#/401Error"
    post:
      tags:
      - consortium
      - TODO
      summary: Synchronize consortium information
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        200:
          description: OK

  /request:
    post:
      tags:
      - request
      summary: Bootstrap blockchain network
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
        - name: request
          in: body
          description: necessary parameters for provisioning blockchain network
          required: true
          schema:
            $ref: "request.yml#/PostRequest"
      responses:
        200:
          description: OK
          schema:
            $ref: "request.yml#/PostResponse"
        400:
          description: Unauthorized
          schema:
            $ref: "request.yml#/400Error"
  /container:
    get:
      tags:
      - container
      summary: List all containers or the containers in one consortium
      security:
      - ApiKeyAuth: []
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: query
        name: consortium id
        description: The consortium which the containers belong to
        required: false
        type: string
      responses:
        200:
          description: OK
          schema:
            $ref: "container.yml#/ContainerListResponse"
        400:
          description: Bad request
          schema:
            $ref: common.yml#/400Error
        401:
          description: Unauthorized
          schema:
            $ref: common.yml#/401Error
          
securityDefinitions:
  ApiKeyAuth:
    type: apiKey
    in: header
    name: Authorization
